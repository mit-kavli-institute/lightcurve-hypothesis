name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '*.md'
      - '*.rst'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**'
      - '*.md'
      - '*.rst'
      - 'pyproject.toml'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install nox
      run: |
        python -m pip install --upgrade pip
        python -m pip install nox

    - name: Build documentation with nox
      run: |
        nox -s docs

    - name: Check for documentation warnings
      run: |
        # Build docs and check for warnings (non-fatal)
        cd docs
        pip install -e "..[docs]"
        sphinx-build -n -b html source build/html 2>&1 | tee sphinx-warnings.log
        if grep -q "WARNING" sphinx-warnings.log; then
          echo "Documentation build produced warnings:"
          grep "WARNING" sphinx-warnings.log
          echo "::warning::Documentation build produced warnings. Please review."
        fi

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/build/html/
        retention-days: 7

    - name: Upload Pages artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/build/html/

  check-links:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install documentation dependencies
      run: |
        pip install -e ".[docs]"

    - name: Check documentation links
      run: |
        cd docs
        sphinx-build -b linkcheck source build/linkcheck
      continue-on-error: true

    - name: Upload link check results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: linkcheck-results
        path: docs/build/linkcheck/
        retention-days: 7

  test-examples:
    name: Test Documentation Examples
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install package and dependencies
      run: |
        pip install -e ".[dev]"

    - name: Extract and test code examples from documentation
      run: |
        # Create a Python script to test documentation examples
        cat > test_doc_examples.py << 'EOF'
        import re
        import sys
        from pathlib import Path
        import glob

        for file_path in glob.glob('docs/source/*.rst'):
            print(f"Testing examples in {file_path}")
            content = Path(file_path).read_text()

            # Find Python code blocks in RST
            code_blocks = re.findall(r'.. code-block:: python\n\n((?:    .*\n)+)', content)

            for i, block in enumerate(code_blocks):
                # Remove indentation
                lines = block.split('\n')
                code = '\n'.join(line[4:] if len(line) > 4 else line for line in lines)

                # Skip import-only blocks and examples with placeholders
                if 'import' in code and len(code.strip().split('\n')) <= 3:
                    continue
                if 'process_lightcurve' in code or '...' in code or 'my_' in code:
                    continue
                if '>>>' in code:  # Skip doctest style
                    continue

                print(f'  Testing code block {i+1}')
                try:
                    exec(code)
                except Exception as e:
                    print(f'    Warning: {e}')
        EOF
        python test_doc_examples.py

  deploy-docs:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-docs, check-links]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  deploy-readthedocs:
    name: Trigger Read the Docs Build
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Trigger RTD build
      run: |
        # Trigger Read the Docs webhook if configured
        if [ -n "${{ secrets.RTD_WEBHOOK_URL }}" ]; then
          curl -X POST -d "branches=main" \
            -H "Authorization: Token ${{ secrets.RTD_WEBHOOK_TOKEN }}" \
            "${{ secrets.RTD_WEBHOOK_URL }}"
          echo "Read the Docs build triggered"
        else
          echo "Read the Docs webhook not configured"
        fi
      continue-on-error: true
