name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  build-and-test:
    name: Build and Test Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine nox

    - name: Run tests
      run: |
        nox -s tests-3.11

    - name: Run quality checks
      run: |
        nox -s quality

    - name: Build package
      run: |
        python -m build

    - name: Check package with twine
      run: |
        python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7

  test-installation:
    name: Test Installation
    needs: build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Test wheel installation
      run: |
        python -m pip install dist/*.whl
        python -c "import hypothesis_lightcurves; print(hypothesis_lightcurves.__version__)"
        python -c "from hypothesis_lightcurves.generators import lightcurves; lc = lightcurves().example(); print(f'Generated lightcurve with {lc.n_points} points')"

    - name: Test sdist installation
      run: |
        python -m pip uninstall -y hypothesis-lightcurves
        python -m pip install dist/*.tar.gz
        python -c "import hypothesis_lightcurves; print(hypothesis_lightcurves.__version__)"

  publish-testpypi:
    name: Publish to TestPyPI
    needs: test-installation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: testpypi
      url: https://test.pypi.org/project/hypothesis-lightcurves/

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

  publish-pypi:
    name: Publish to PyPI
    needs: publish-testpypi
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/project/hypothesis-lightcurves/

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  create-release:
    name: Create GitHub Release
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate release notes
      id: notes
      run: |
        # Generate release notes from git log
        echo "## What's Changed" > release_notes.md
        git log --pretty=format:"* %s by @%an" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md
        echo "" >> release_notes.md
        echo "## Installation" >> release_notes.md
        echo '```bash' >> release_notes.md
        echo "pip install hypothesis-lightcurves==${{ steps.version.outputs.VERSION }}" >> release_notes.md
        echo '```' >> release_notes.md
        echo "" >> release_notes.md
        echo "## Documentation" >> release_notes.md
        echo "* [Read the Docs](https://hypothesis-lightcurves.readthedocs.io/)" >> release_notes.md
        echo "* [API Reference](https://hypothesis-lightcurves.readthedocs.io/en/latest/api.html)" >> release_notes.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: v${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        files: |
          dist/*.whl
          dist/*.tar.gz
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'rc') || contains(steps.version.outputs.VERSION, 'a') || contains(steps.version.outputs.VERSION, 'b') }}
