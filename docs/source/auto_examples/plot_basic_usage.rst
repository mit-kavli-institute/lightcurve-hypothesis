
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_basic_usage.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_basic_usage.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_basic_usage.py:


Basic Lightcurve Generation
============================

This example demonstrates the basic usage of hypothesis-lightcurves
to generate and visualize synthetic lightcurves.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Import necessary libraries

.. GENERATED FROM PYTHON SOURCE LINES 11-17

.. code-block:: Python


    import matplotlib.pyplot as plt

    from hypothesis_lightcurves.generators import lightcurves, periodic_lightcurves
    from hypothesis_lightcurves.modifiers import add_noise








.. GENERATED FROM PYTHON SOURCE LINES 18-21

Generate a basic lightcurve
----------------------------
Create a simple random lightcurve using the basic generator

.. GENERATED FROM PYTHON SOURCE LINES 21-28

.. code-block:: Python


    lc = lightcurves(min_points=200, max_points=200).example()
    print(f"Generated lightcurve with {lc.n_points} points")
    print(f"Duration: {lc.duration:.2f}")
    print(f"Mean flux: {lc.mean_flux:.2f}")
    print(f"Std flux: {lc.std_flux:.2f}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/examples/plot_basic_usage.py:22: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=200, max_points=200))
      lc = lightcurves(min_points=200, max_points=200).example()
    Generated lightcurve with 200 points
    Duration: 100.00
    Mean flux: 386711.07
    Std flux: 79702.41




.. GENERATED FROM PYTHON SOURCE LINES 29-30

Plot the basic lightcurve

.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: Python


    fig, ax = lc.plot(title="Basic Random Lightcurve")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_usage_001.png
   :alt: Basic Random Lightcurve
   :srcset: /auto_examples/images/sphx_glr_plot_basic_usage_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 35-38

Generate a periodic lightcurve
-------------------------------
Create a lightcurve with a known period and amplitude

.. GENERATED FROM PYTHON SOURCE LINES 38-52

.. code-block:: Python


    periodic_lc = periodic_lightcurves(
        min_points=300,
        max_points=300,
        min_period=2.4,
        max_period=2.6,
        min_amplitude=0.14,
        max_amplitude=0.16,
        with_noise=False,
    ).example()

    fig, ax = periodic_lc.plot(title="Periodic Lightcurve (P=2.5)")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_usage_002.png
   :alt: Periodic Lightcurve (P=2.5)
   :srcset: /auto_examples/images/sphx_glr_plot_basic_usage_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/examples/plot_basic_usage.py:47: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: periodic_lightcurves(min_points=300, max_points=300, min_period=2.4, max_period=2.6, min_amplitude=0.14, max_amplitude=0.16, with_noise=False))
      ).example()




.. GENERATED FROM PYTHON SOURCE LINES 53-56

Add realistic noise
-------------------
Apply noise to make the lightcurve more realistic

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: Python


    noisy_lc = add_noise(periodic_lc, level=0.02)

    # Plot both for comparison
    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 8), sharex=True)

    periodic_lc.plot(ax=ax1, title="Original Periodic Signal")
    noisy_lc.plot(ax=ax2, title="With Added Noise")

    plt.tight_layout()
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_usage_003.png
   :alt: Original Periodic Signal, With Added Noise
   :srcset: /auto_examples/images/sphx_glr_plot_basic_usage_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 69-72

Generate lightcurve with errors
--------------------------------
Create a lightcurve that includes measurement uncertainties

.. GENERATED FROM PYTHON SOURCE LINES 72-78

.. code-block:: Python


    lc_with_errors = lightcurves(min_points=150, max_points=150, with_errors=True).example()

    fig, ax = lc_with_errors.plot(title="Lightcurve with Measurement Errors", show_errors=True)
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_usage_004.png
   :alt: Lightcurve with Measurement Errors
   :srcset: /auto_examples/images/sphx_glr_plot_basic_usage_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/examples/plot_basic_usage.py:73: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=150, max_points=150, with_errors=True))
      lc_with_errors = lightcurves(min_points=150, max_points=150, with_errors=True).example()




.. GENERATED FROM PYTHON SOURCE LINES 79-82

Normalized lightcurve
----------------------
Normalize a lightcurve to zero mean and unit variance

.. GENERATED FROM PYTHON SOURCE LINES 82-96

.. code-block:: Python


    original = periodic_lightcurves(min_amplitude=0.4, max_amplitude=0.6, with_noise=False).example()
    normalized = original.normalize()

    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))

    original.plot(ax=ax1, title=f"Original (mean={original.mean_flux:.1f})")
    normalized.plot(ax=ax2, title=f"Normalized (mean={normalized.mean_flux:.1e})")

    plt.tight_layout()
    plt.show()

    print(f"Original: mean={original.mean_flux:.2f}, std={original.std_flux:.2f}")
    print(f"Normalized: mean={normalized.mean_flux:.2e}, std={normalized.std_flux:.2f}")



.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_usage_005.png
   :alt: Original (mean=47.6), Normalized (mean=2.2e-16)
   :srcset: /auto_examples/images/sphx_glr_plot_basic_usage_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/examples/plot_basic_usage.py:83: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: periodic_lightcurves(min_amplitude=0.4, max_amplitude=0.6, with_noise=False))
      original = periodic_lightcurves(min_amplitude=0.4, max_amplitude=0.6, with_noise=False).example()
    Original: mean=47.62, std=14.01
    Normalized: mean=2.16e-16, std=1.00





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.475 seconds)


.. _sphx_glr_download_auto_examples_plot_basic_usage.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_basic_usage.ipynb <plot_basic_usage.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_basic_usage.py <plot_basic_usage.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_basic_usage.zip <plot_basic_usage.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
