
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_transients.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_transients.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_transients.py:


Transient Lightcurve Examples
==============================

This example demonstrates the generation and visualization of transient lightcurves,
which model events like supernovae, novae, and stellar flares.

.. GENERATED FROM PYTHON SOURCE LINES 8-20

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    from hypothesis_lightcurves.generators import transient_lightcurves
    from hypothesis_lightcurves.visualization import (
        create_gallery_plot,
        plot_comparison,
        plot_lightcurve,
        plot_with_annotations,
    )








.. GENERATED FROM PYTHON SOURCE LINES 21-24

Basic transient event
----------------------
Generate and visualize a basic transient lightcurve.

.. GENERATED FROM PYTHON SOURCE LINES 24-39

.. code-block:: Python


    np.random.seed(42)
    lc = transient_lightcurves().example()

    fig, ax = plt.subplots(figsize=(12, 6))
    plot_with_annotations(lc, ax=ax, color='darkred', marker='.', markersize=3)
    ax.set_title("Transient Event Example", fontsize=14)

    # Mark the peak
    peak_idx = np.argmax(lc.flux)
    ax.plot(lc.time[peak_idx], lc.flux[peak_idx], 'r*', markersize=15, label='Peak')
    ax.legend()

    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_001.png
   :alt: Transient Event Example
   :srcset: /auto_examples/images/sphx_glr_plot_transients_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:26: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves())
      lc = transient_lightcurves().example()




.. GENERATED FROM PYTHON SOURCE LINES 40-43

Different rise and decay times
-------------------------------
Compare transients with different temporal characteristics.

.. GENERATED FROM PYTHON SOURCE LINES 43-98

.. code-block:: Python


    fig, axes = plt.subplots(2, 2, figsize=(14, 10))

    # Fast rise, fast decay (like a flare)
    lc_flare = transient_lightcurves(
        min_rise_time=0.5,
        max_rise_time=0.5,
        min_decay_time=1.0,
        max_decay_time=1.0,
        min_peak_time=10,
        max_peak_time=10
    ).example()
    plot_lightcurve(lc_flare, ax=axes[0, 0], title="Flare-like (Fast rise, Fast decay)",
                    color='orange', marker='.', markersize=2)

    # Fast rise, slow decay (like a Type Ia supernova)
    lc_sn_ia = transient_lightcurves(
        min_rise_time=2.0,
        max_rise_time=2.0,
        min_decay_time=15.0,
        max_decay_time=15.0,
        min_peak_time=20,
        max_peak_time=20
    ).example()
    plot_lightcurve(lc_sn_ia, ax=axes[0, 1], title="SN Ia-like (Fast rise, Slow decay)",
                    color='blue', marker='.', markersize=2)

    # Slow rise, slow decay (like a Type II supernova)
    lc_sn_ii = transient_lightcurves(
        min_rise_time=5.0,
        max_rise_time=5.0,
        min_decay_time=20.0,
        max_decay_time=20.0,
        min_peak_time=25,
        max_peak_time=25
    ).example()
    plot_lightcurve(lc_sn_ii, ax=axes[1, 0], title="SN II-like (Slow rise, Slow decay)",
                    color='green', marker='.', markersize=2)

    # Slow rise, fast decay (unusual)
    lc_unusual = transient_lightcurves(
        min_rise_time=8.0,
        max_rise_time=8.0,
        min_decay_time=2.0,
        max_decay_time=2.0,
        min_peak_time=20,
        max_peak_time=20
    ).example()
    plot_lightcurve(lc_unusual, ax=axes[1, 1], title="Unusual (Slow rise, Fast decay)",
                    color='purple', marker='.', markersize=2)

    plt.suptitle("Transient Events with Different Timescales", fontsize=16, y=1.01)
    plt.tight_layout()
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_002.png
   :alt: Transient Events with Different Timescales, Flare-like (Fast rise, Fast decay), SN Ia-like (Fast rise, Slow decay), SN II-like (Slow rise, Slow decay), Unusual (Slow rise, Fast decay)
   :srcset: /auto_examples/images/sphx_glr_plot_transients_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:54: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_peak_time=10, max_peak_time=10, min_rise_time=0.5, max_rise_time=0.5, min_decay_time=1.0, max_decay_time=1.0))
      ).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:66: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_peak_time=20, max_peak_time=20, min_rise_time=2.0, max_rise_time=2.0, min_decay_time=15.0, max_decay_time=15.0))
      ).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:78: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_peak_time=25, max_peak_time=25, min_rise_time=5.0, max_rise_time=5.0, min_decay_time=20.0, max_decay_time=20.0))
      ).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:90: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_peak_time=20, max_peak_time=20, min_rise_time=8.0, max_rise_time=8.0, min_decay_time=2.0, max_decay_time=2.0))
      ).example()




.. GENERATED FROM PYTHON SOURCE LINES 99-102

Peak time variation
-------------------
Show how peak time affects the lightcurve.

.. GENERATED FROM PYTHON SOURCE LINES 102-126

.. code-block:: Python


    peak_times = [10, 25, 40, 55]
    fig, axes = plt.subplots(1, len(peak_times), figsize=(16, 4))

    for i, peak_time in enumerate(peak_times):
        lc = transient_lightcurves(
            min_peak_time=peak_time,
            max_peak_time=peak_time,
            min_rise_time=3.0,
            max_rise_time=3.0,
            min_decay_time=10.0,
            max_decay_time=10.0,
            min_points=200,
            max_points=200
        ).example()

        plot_lightcurve(lc, ax=axes[i], color=f'C{i}', marker='', linewidth=2)
        axes[i].set_title(f'Peak at t={peak_time}', fontsize=12)
        axes[i].axvline(peak_time, color='red', linestyle='--', alpha=0.5)

    plt.suptitle('Transients with Different Peak Times', fontsize=16, y=1.05)
    plt.tight_layout()
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_003.png
   :alt: Transients with Different Peak Times, Peak at t=10, Peak at t=25, Peak at t=40, Peak at t=55
   :srcset: /auto_examples/images/sphx_glr_plot_transients_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:116: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=10, max_peak_time=10, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=10.0, max_decay_time=10.0))
      ).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:116: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=25, max_peak_time=25, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=10.0, max_decay_time=10.0))
      ).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:116: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=40, max_peak_time=40, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=10.0, max_decay_time=10.0))
      ).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:116: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=55, max_peak_time=55, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=10.0, max_decay_time=10.0))
      ).example()




.. GENERATED FROM PYTHON SOURCE LINES 127-130

Amplitude variations
--------------------
Compare transients with different peak amplitudes.

.. GENERATED FROM PYTHON SOURCE LINES 130-163

.. code-block:: Python


    fig, ax = plt.subplots(figsize=(12, 7))

    amplitudes = [100, 500, 1000, 5000]
    colors = ['blue', 'green', 'orange', 'red']

    for amp, color in zip(amplitudes, colors):
        lc = transient_lightcurves(
            min_peak_time=25,
            max_peak_time=25,
            min_rise_time=3.0,
            max_rise_time=3.0,
            min_decay_time=10.0,
            max_decay_time=10.0,
            min_points=150,
            max_points=150
        ).example()

        # Scale the flux to desired amplitude
        baseline = np.min(lc.flux)
        scale_factor = amp / (np.max(lc.flux) - baseline)
        scaled_flux = baseline + (lc.flux - baseline) * scale_factor

        ax.plot(lc.time, scaled_flux, color=color, linewidth=2,
                label=f'Peak amplitude ≈ {amp}', alpha=0.7)

    ax.set_xlabel('Time', fontsize=12)
    ax.set_ylabel('Flux', fontsize=12)
    ax.set_title('Transients with Different Amplitudes', fontsize=14)
    ax.legend()
    ax.grid(True, alpha=0.3)
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_004.png
   :alt: Transients with Different Amplitudes
   :srcset: /auto_examples/images/sphx_glr_plot_transients_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:146: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=150, max_points=150, min_peak_time=25, max_peak_time=25, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=10.0, max_decay_time=10.0))
      ).example()




.. GENERATED FROM PYTHON SOURCE LINES 164-167

Evolution of a transient
-------------------------
Show the characteristic phases of a transient event.

.. GENERATED FROM PYTHON SOURCE LINES 167-215

.. code-block:: Python


    lc_evolution = transient_lightcurves(
        min_peak_time=30,
        max_peak_time=30,
        min_rise_time=5.0,
        max_rise_time=5.0,
        min_decay_time=15.0,
        max_decay_time=15.0,
        min_points=300,
        max_points=300
    ).example()

    fig, ax = plt.subplots(figsize=(14, 7))

    # Plot the full lightcurve
    plot_lightcurve(lc_evolution, ax=ax, color='black', marker='', linewidth=2)

    # Highlight different phases
    peak_time = lc_evolution.metadata['peak_time']
    rise_time = lc_evolution.metadata['rise_time']
    decay_time = lc_evolution.metadata['decay_time']

    # Pre-explosion
    ax.axvspan(0, peak_time - 3*rise_time, alpha=0.2, color='gray', label='Pre-explosion')

    # Rise phase
    ax.axvspan(peak_time - 3*rise_time, peak_time, alpha=0.2, color='blue', label='Rise phase')

    # Peak
    peak_idx = np.argmax(lc_evolution.flux)
    ax.plot(lc_evolution.time[peak_idx], lc_evolution.flux[peak_idx],
            'r*', markersize=20, label='Peak')

    # Decay phase
    ax.axvspan(peak_time, peak_time + 3*decay_time, alpha=0.2, color='orange', label='Decay phase')

    # Late time
    ax.axvspan(peak_time + 3*decay_time, lc_evolution.time[-1],
               alpha=0.2, color='purple', label='Late time')

    ax.set_xlabel('Time', fontsize=12)
    ax.set_ylabel('Flux', fontsize=12)
    ax.set_title('Phases of a Transient Event', fontsize=14)
    ax.legend(loc='upper right')
    ax.grid(True, alpha=0.3)

    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_005.png
   :alt: Phases of a Transient Event
   :srcset: /auto_examples/images/sphx_glr_plot_transients_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:177: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=300, max_points=300, min_peak_time=30, max_peak_time=30, min_rise_time=5.0, max_rise_time=5.0, min_decay_time=15.0, max_decay_time=15.0))
      ).example()




.. GENERATED FROM PYTHON SOURCE LINES 216-219

Gallery of transient events
----------------------------
Showcase the diversity of transient lightcurves.

.. GENERATED FROM PYTHON SOURCE LINES 219-229

.. code-block:: Python


    fig = create_gallery_plot(
        n_examples=9,
        generator_func=transient_lightcurves,
        title="Gallery of Transient Events",
        figsize=(15, 10),
        seed=789
    )
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_006.png
   :alt: Gallery of Transient Events, Example 1, Example 2, Example 3, Example 4, Example 5, Example 6, Example 7, Example 8, Example 9
   :srcset: /auto_examples/images/sphx_glr_plot_transients_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/src/hypothesis_lightcurves/visualization.py:303: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves())
      examples = [strategy.example() for _ in range(n_examples)]




.. GENERATED FROM PYTHON SOURCE LINES 230-233

Comparison with noise
---------------------
Show how noise affects transient detection.

.. GENERATED FROM PYTHON SOURCE LINES 233-273

.. code-block:: Python


    fig, axes = plt.subplots(3, 1, figsize=(12, 10), sharex=True)

    # Generate base transient
    np.random.seed(100)
    base_params = dict(
        min_peak_time=25,
        max_peak_time=25,
        min_rise_time=3.0,
        max_rise_time=3.0,
        min_decay_time=12.0,
        max_decay_time=12.0,
        min_points=200,
        max_points=200
    )

    # Clean transient
    lc_clean = transient_lightcurves(**base_params).example()
    # Remove noise for clean version
    lc_clean.flux = lc_clean.flux - np.random.normal(0, lc_clean.flux_err[0], len(lc_clean.flux))
    lc_clean.flux_err = None

    plot_lightcurve(lc_clean, ax=axes[0], title="Clean Transient",
                    color='navy', marker='', linewidth=2)

    # Low noise
    lc_low_noise = transient_lightcurves(**base_params).example()
    plot_lightcurve(lc_low_noise, ax=axes[1], title="Low Noise",
                    color='darkgreen', marker='.', markersize=2, linestyle='')

    # High noise (add extra noise)
    lc_high_noise = transient_lightcurves(**base_params).example()
    extra_noise = np.random.normal(0, np.std(lc_high_noise.flux) * 0.2, len(lc_high_noise.flux))
    lc_high_noise.flux += extra_noise

    plot_lightcurve(lc_high_noise, ax=axes[2], title="High Noise",
                    color='darkred', marker='.', markersize=2, linestyle='')

    plt.suptitle('Impact of Noise on Transient Detection', fontsize=16, y=1.01)
    plt.tight_layout()
    plt.show()


.. image-sg:: /auto_examples/images/sphx_glr_plot_transients_007.png
   :alt: Impact of Noise on Transient Detection, Clean Transient, Low Noise, High Noise
   :srcset: /auto_examples/images/sphx_glr_plot_transients_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:250: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=25, max_peak_time=25, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=12.0, max_decay_time=12.0))
      lc_clean = transient_lightcurves(**base_params).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:259: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=25, max_peak_time=25, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=12.0, max_decay_time=12.0))
      lc_low_noise = transient_lightcurves(**base_params).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_transients.py:264: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: transient_lightcurves(min_points=200, max_points=200, min_peak_time=25, max_peak_time=25, min_rise_time=3.0, max_rise_time=3.0, min_decay_time=12.0, max_decay_time=12.0))
      lc_high_noise = transient_lightcurves(**base_params).example()





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.108 seconds)


.. _sphx_glr_download_auto_examples_plot_transients.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_transients.ipynb <plot_transients.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_transients.py <plot_transients.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_transients.zip <plot_transients.zip>`
