
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_basic_lightcurves.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_basic_lightcurves.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_basic_lightcurves.py:


Basic Lightcurve Examples
==========================

This example demonstrates the generation and visualization of basic random lightcurves
using the hypothesis_lightcurves package.

.. GENERATED FROM PYTHON SOURCE LINES 8-18

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np
    from hypothesis_lightcurves.generators import lightcurves
    from hypothesis_lightcurves.visualization import (
        create_gallery_plot,
        plot_lightcurve,
        plot_with_annotations,
    )








.. GENERATED FROM PYTHON SOURCE LINES 19-22

Generate a single random lightcurve
------------------------------------
Let's start by generating and plotting a single random lightcurve.

.. GENERATED FROM PYTHON SOURCE LINES 22-30

.. code-block:: Python


    np.random.seed(42)
    lc = lightcurves(min_points=100, max_points=200).example()

    fig, ax = plt.subplots(figsize=(10, 6))
    plot_lightcurve(lc, ax=ax, title="Random Lightcurve Example", color="navy")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_lightcurves_001.png
   :alt: Random Lightcurve Example
   :srcset: /auto_examples/images/sphx_glr_plot_basic_lightcurves_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:24: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=100, max_points=200))
      lc = lightcurves(min_points=100, max_points=200).example()




.. GENERATED FROM PYTHON SOURCE LINES 31-34

Generate lightcurves with different parameters
-----------------------------------------------
We can control various parameters when generating lightcurves.

.. GENERATED FROM PYTHON SOURCE LINES 34-56

.. code-block:: Python


    fig, axes = plt.subplots(2, 2, figsize=(12, 10))

    # Sparse lightcurve
    lc_sparse = lightcurves(min_points=20, max_points=30).example()
    plot_lightcurve(lc_sparse, ax=axes[0, 0], title="Sparse Sampling", marker="o", markersize=6)

    # Dense lightcurve
    lc_dense = lightcurves(min_points=500, max_points=1000).example()
    plot_lightcurve(lc_dense, ax=axes[0, 1], title="Dense Sampling", marker="", linestyle="-")

    # High flux range
    lc_bright = lightcurves(min_flux=1000, max_flux=10000).example()
    plot_lightcurve(lc_bright, ax=axes[1, 0], title="High Flux Range", color="orange")

    # With errors
    lc_errors = lightcurves(with_errors=True).example()
    plot_lightcurve(lc_errors, ax=axes[1, 1], title="With Measurement Errors", color="green")

    plt.tight_layout()
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_lightcurves_002.png
   :alt: Sparse Sampling, Dense Sampling, High Flux Range, With Measurement Errors
   :srcset: /auto_examples/images/sphx_glr_plot_basic_lightcurves_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:38: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=20, max_points=30))
      lc_sparse = lightcurves(min_points=20, max_points=30).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:42: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=500, max_points=1000))
      lc_dense = lightcurves(min_points=500, max_points=1000).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:46: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_flux=1000, max_flux=10000))
      lc_bright = lightcurves(min_flux=1000, max_flux=10000).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:50: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(with_errors=True))
      lc_errors = lightcurves(with_errors=True).example()




.. GENERATED FROM PYTHON SOURCE LINES 57-60

Lightcurve with annotations
----------------------------
We can add statistical annotations to better understand the lightcurve properties.

.. GENERATED FROM PYTHON SOURCE LINES 60-68

.. code-block:: Python


    lc_annotated = lightcurves(min_points=150, max_points=200, with_errors=True).example()

    fig, ax = plt.subplots(figsize=(12, 7))
    plot_with_annotations(lc_annotated, ax=ax, annotate_statistics=True, color="purple", alpha=0.7)
    ax.set_title("Annotated Lightcurve with Statistics", fontsize=14)
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_lightcurves_003.png
   :alt: Annotated Lightcurve with Statistics
   :srcset: /auto_examples/images/sphx_glr_plot_basic_lightcurves_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:61: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=150, max_points=200, with_errors=True))
      lc_annotated = lightcurves(min_points=150, max_points=200, with_errors=True).example()




.. GENERATED FROM PYTHON SOURCE LINES 69-72

Gallery of random lightcurves
------------------------------
Let's create a gallery showing the diversity of generated lightcurves.

.. GENERATED FROM PYTHON SOURCE LINES 72-84

.. code-block:: Python


    fig = create_gallery_plot(
        n_examples=9,
        generator_func=lightcurves,
        title="Gallery of Random Lightcurves",
        figsize=(15, 10),
        seed=123,
        min_points=50,
        max_points=300,
    )
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_lightcurves_004.png
   :alt: Gallery of Random Lightcurves, Example 1, Example 2, Example 3, Example 4, Example 5, Example 6, Example 7, Example 8, Example 9
   :srcset: /auto_examples/images/sphx_glr_plot_basic_lightcurves_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/src/hypothesis_lightcurves/visualization.py:303: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_points=50, max_points=300))
      examples = [strategy.example() for _ in range(n_examples)]




.. GENERATED FROM PYTHON SOURCE LINES 85-88

Comparing different flux distributions
---------------------------------------
We can generate lightcurves with different flux characteristics.

.. GENERATED FROM PYTHON SOURCE LINES 88-109

.. code-block:: Python


    fig, axes = plt.subplots(1, 3, figsize=(15, 5))

    # Low baseline
    lc_low = lightcurves(min_flux=0, max_flux=100).example()
    plot_lightcurve(lc_low, ax=axes[0], title="Low Flux (0-100)", color="blue")
    axes[0].set_ylim(-10, 110)

    # Medium baseline
    lc_med = lightcurves(min_flux=900, max_flux=1100).example()
    plot_lightcurve(lc_med, ax=axes[1], title="Medium Flux (900-1100)", color="green")
    axes[1].set_ylim(850, 1150)

    # High baseline
    lc_high = lightcurves(min_flux=9000, max_flux=11000).example()
    plot_lightcurve(lc_high, ax=axes[2], title="High Flux (9000-11000)", color="red")
    axes[2].set_ylim(8500, 11500)

    plt.suptitle("Lightcurves with Different Flux Baselines", fontsize=16, y=1.02)
    plt.tight_layout()
    plt.show()



.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_lightcurves_005.png
   :alt: Lightcurves with Different Flux Baselines, Low Flux (0-100), Medium Flux (900-1100), High Flux (9000-11000)
   :srcset: /auto_examples/images/sphx_glr_plot_basic_lightcurves_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:92: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_flux=0, max_flux=100))
      lc_low = lightcurves(min_flux=0, max_flux=100).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:97: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_flux=900, max_flux=1100))
      lc_med = lightcurves(min_flux=900, max_flux=1100).example()
    /home/williamfong/Documents/Projects/lightcurve-hypothesis/docs/source/examples/plot_basic_lightcurves.py:102: NonInteractiveExampleWarning: The `.example()` method is good for exploring strategies, but should only be used interactively.  We recommend using `@given` for tests - it performs better, saves and replays failures to avoid flakiness, and reports minimal examples. (strategy: lightcurves(min_flux=9000, max_flux=11000))
      lc_high = lightcurves(min_flux=9000, max_flux=11000).example()





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.481 seconds)


.. _sphx_glr_download_auto_examples_plot_basic_lightcurves.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_basic_lightcurves.ipynb <plot_basic_lightcurves.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_basic_lightcurves.py <plot_basic_lightcurves.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_basic_lightcurves.zip <plot_basic_lightcurves.zip>`
